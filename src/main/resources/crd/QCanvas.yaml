apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: qcanvas.ketanyun.cn
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: ketanyun.cn
    # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: qcanvas
    # singular name to be used as an alias on the CLI and for display
    singular: qcanvas
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: QCanvas
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
      - qcvs
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1alpha1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - app
                - canvas
                - designer
              properties:

                # 所属应用(QApp)
                app:
                  type: object
                  required:
                    - name
                  properties:
                    # 所属应用的 QApp 的 metadata.name 
                    name: 
                      type: string   
                    # 新建租户时是否需要自动激活 
                    autoActivate:
                      type: boolean 
                    # 内容变化时，已激活的租户中本应用是否自动升级 
                    autoUpgrade:
                      type: boolean 

                # 设计器信息
                designer: 
                  type: object
                  required:
                    - name
                    - version
                  properties:
                    # 设计器名称，如 maker
                    name: 
                      type: string
                    # 设计器版本，影响保存出来的文件格式版本
                    version: 
                      type: string
                    # 额外设计器相关属性
                    attributes:
                      type: object
                      properties:
                        pages:
                          type: array
                          items:
                            type: object
                            properties:
                              name: 
                                type: string # reference to pages[].name
                              x: 
                                type: integer
                              y:
                                type: integer

                # 定义本CRD的公共类型，不用于实际 CustomResource
                types:
                  type: object
                  properties:
                    # 《元素》：基础类型
                    _element: 
                      type: object
                      properties: &ELEMENT_PROPERTIES
                        name:
                          type: string
                        text:
                          type: string
                        description:
                          type: string
                        uri:
                          type: string
                        tags:
                          type: string
                    # 《筛选器》
                    _filter: &FILTER
                      type: object
                      required:
                        - field
                      # anyOf:
                      #  - required:
                      #    - value
                      #    - values
                      #    - experssion
                      properties:
                        field:
                          type: string
                        match:
                          type: string
                          enum:
                            - eq 
                            - neq
                            - in
                            - nin
                            - gt
                            - gte
                            - lt
                            - lte
                            - like
                        value:
                          x-kubernetes-int-or-string: true
                        values:
                          type: array
                          items:
                            x-kubernetes-int-or-string: true
                        experssion:
                          type: string

                    # 《修饰符》(非空、数组）
                    # 参考 https://graphql.org/learn/schema/ type-modifiers
                    _modifiers: &MODIFIERS
                      type: array
                      items:
                        type: string
                        enmu:
                          - NotNull
                          - List

                    # 《参数》: GraphQL 的 argument 概念
                    _argument: &ARGUMENT
                      type: object
                      required:
                        - name
                        - value
                      properties:
                        # 字段数据类型，引用到 spec.canvas.data[].name
                        type:
                          type: string
                        # 参数名
                        name:
                          type: string
                        value:
                          x-kubernetes-int-or-string: true
                        defaultValue:
                          x-kubernetes-int-or-string: true
                        modifiers: *MODIFIERS

                    # 《字段》
                    _field: &FIELD
                      type: object
                      required:
                        - name
                      properties:
                        <<: *ELEMENT_PROPERTIES
                        # 对如何使用改字段的暗示
                        kind:
                          type: string
                          enum:
                            - text
                            - value
                            - icon
                            - tooltip
                        # 字段数据类型，引用到 spec.canvas.data[].name
                        type:
                          type: string
                        # 修饰符 (非空、数组）
                        modifiers: *MODIFIERS

                    # 《操作》: GraphQL 的 query/mutation/subscription
                    _operation: &OPERATION
                      type: object
                      properties:
                        kind:
                          type: string
                          enum:
                            - query
                            - mutation
                            - subscription
                            - "*"           # 不限
                        name:
                          type: string
                        # 该《数据操作》所需Filter
                        # 参考：https://github.com/infoplus/canvas-docs/wiki/Filter
                        filters:
                          type: array
                          items: *FILTER
                        # 该《数据操作》所需字段
                        fields:
                          type: array
                          items: *FIELD
                        # 该《数据操作》所需参数
                        arguments:
                          type: array
                          items: *ARGUMENT

                    # 《控件》
                    _control: 
                      type: object
                      properties: &CONTROL_PROPERTIES
                        <<: *ELEMENT_PROPERTIES
                        value: 
                          x-kubernetes-int-or-string: true
                        defaultValue: 
                          x-kubernetes-int-or-string: true
                        # 控件数据源，下拉框等使用，引用到 spec.canvas.data[].name
                        data:
                          type: string
                        operation: *OPERATION
                        icon:
                          type: string
                        # 可见性。支持表达式，"="开头。
                        # 参考：https://github.com/infoplus/canvas-docs/wiki/Expression
                        visible:
                          type: string
                        enabled:
                          type: string
                        styles:
                          type: string
                        format:
                          type: string

                    # 《命令》：界面操作
                    _command: &COMMAND
                      type: object 
                      description: define client-side UI interactions
                      required:
                        - when
                        - kind
                      properties:
                        # 相较于 operation 的执行实际
                        when:
                          type: string
                          enum:
                            - before
                            - done
                            - success
                            - failure
                        kind:
                          type: string
                          enum:
                            - confirm
                            - info
                            - warning
                            - error
                            - refresh
                            - close
                            - link
                            - navigate 
                        # URL scenes /w examples:
                        # 1. (link) external                : https://example.com/path1
                        # 2. (link) in-app-vue              : vue://Home
                        # 3. (link) external-micro-frontend : sub://{context-path}/{router}?uri={sub-app-uri}&token={self|parent}
                        # 4. (nav) in-app-native navigate   : "product", "product#sales" (page + tab)
                        # 5. (nav) inter-app-native navi    : {client-id}://{page}#{content}
                        uri:
                          type: string
                        # 用于 navigate/link
                        target:
                          type: string
                          enum:
                            - _self
                            - _blank
                        # 用于 navigate，向前/向后跳转的历史栈长度 
                        offset:
                          type: integer
                        # 用于 confirm/info/warning/error，显示的消息内容
                        message:
                          type: string
                        # 参数列表。对于 navigate，视为 QueryString  
                        parameters:
                          type: array
                          items:
                            type: object
                            properties:
                              name: 
                                type: string
                              value: 
                                x-kubernetes-int-or-string: true

                    # 《动作》：服务调用
                    _action: &ACTION 
                      type: object
                      properties:
                        <<: *CONTROL_PROPERTIES
                        kind:
                          type: string
                          enum:
                            - create
                            - read
                            - update
                            - delete
                            - list
                            - print
                            - import
                            - export
                            - search 
                        # 定义服务端交互 (server-side API invocations)
                        operation: *OPERATION
                        # 定义客户端交互 (client-side UI interactions)
                        commands: 
                          type: array
                          items: *COMMAND

                    # 《用户》
                    _user: &USER
                      type: object
                      properties:
                        openid:   # 用户openid
                          type: string
                        username: # 用户名
                          type: string 
                        account:  # 用户账号
                          type: string
                        text:     # 显示名
                          type: string 
                    
                    # 《部门》
                    _dept: &DEPT
                      type: object
                      properties:
                        code:     # 部门代码
                          type: string
                        text:     # 显示名
                          type: string 

                    # 《岗位》
                    _post: &POST
                      type: object
                      properties:
                        code:     # 岗位代码
                          type: string
                        text:     # 显示名
                          type: string 
                    

                # 应用定义
                canvas:
                  type: object
                  properties:

                    # 《布局》定义  
                    layout: 
                      type: object
                      properties:
                        # 主题
                        prototype:
                          type: string  
                        # 首页 page 名 
                        home:
                          type: string
                        # 应用 logo
                        logo:
                          type: object
                          properties:
                            # 可支持表达式，如 =RES("image.logo").uri
                            uri:  
                              type: string
                        # 版权信息
                        copyright:
                          type: string


                    # 《数据》 列表定义
                    data: 
                      type: array
                      items: &DATA
                        type: object 
                        properties:
                          <<: *ELEMENT_PROPERTIES
                          #《数据字段》列表定义
                          fields: 
                            type: array
                            items: *FIELD
                          #《数据操作》列表定义
                          operations: 
                            type: array
                            items: *OPERATION
                          #《数据环境》列表定义
                          environments: 
                            type: array
                            items: &ENVIRONMENT
                              type: object
                              required:
                                - kind
                                - sources
                              properties:
                                kind: 
                                  type: string
                                  enmu:
                                    - development
                                    - staging
                                    - production
                                sources:
                                  type: array
                                  #《数据来源》
                                  items: &SOURCE
                                    type: object
                                    required:
                                      - uri
                                    properties:
                                      # 可选协议：
                                      # 网关：bus://$service/$type (schema也兼容canvasbus，20211109)
                                      # 常量：constants://$JSON 
                                      uri: 
                                        type: string
                          #《数据属性》
                          attributes:
                            type: object
                            properties:
                              # 是否支持分页结构
                              pagination:
                                type: boolean 

                    # 《菜单》 列表定义 
                    menu:  
                      type: object
                      required:
                        - kind
                        - items
                      properties:                            
                        kind:
                          type: string
                          enum:
                            - static
                            - dynamic
                        items: 
                          type: array
                          items: &MENUITEM
                            type: object
                            required:
                              - name
                              - text 
                            properties:
                              # name: 菜单机读代码，本定义内唯一
                              <<: *ELEMENT_PROPERTIES
                              # 菜单图标，可使用资源引用，例如：=R('images/logo')
                              icon:
                                type: string
                              # 父菜单
                              parent:
                                type: string
                              # 同 控件.visible 属性，支持表达式
                              visible: 
                                type: string 
                              # 菜单动作
                              action: *ACTION
                              # 菜单项关联的数据，仅如下数据有效： 
                              # accesses[].name
                              # accesses[].text
                              # accesses[].operation[].filter[]
                              accesses: 
                                type: array
                                items: *DATA

                    # 《资源》 列表定义 
                    resources:
                      type: object
                      properties:
                        i18n: 
                          type: object
                          properties:
                            defaults: 
                              type: string
                              pattern: '^(zh|en|jp|kr|fr)$'
                            strings: 
                              type: array 
                              items:
                                type: object
                                required:
                                  - name
                                properties:
                                  name:
                                    type: string
                                  zh:
                                    type: string
                                  en:
                                    type: string
                                  fr:
                                    type: string
                                  jp:
                                    type: string
                                  kr:
                                    type: string
                        # 《图片》
                        images: 
                          type: array 
                          items: 
                            type: object
                            properties:
                              # images内唯一，可使用 RES("images.${name}") 引用
                              name: 
                                type: string
                              # 图片名
                              text:
                                type: string
                              # 图片URI
                              uri:
                                type: string
                              # 图片类型
                              mime:
                                type: string
                              # 图片大小（字节数）
                              size:
                                type: integer
                              # 图片宽度（像素数）
                              width:
                                type: integer
                              # 图片宽度（像素数）
                              height:
                                type: integer

                        # 《字体》
                        fonts: 
                          type: array 
                          items: 
                            type: object 

                    # 《页面》 列表定义
                    pages: 
                      type: array
                      items:
                        type: object
                        required:
                          - name
                        properties:
                          # 页面机读代码，本定义内唯一，被菜单跳转《动作》、首页等引用
                          name: 
                            type: string
                          text:
                            type: string
                          # 标签页
                          tabs:
                            type: array
                            items:
                              type: object
                              required:
                                - content
                              properties:
                                <<: *ELEMENT_PROPERTIES
                                icon: 
                                  type: string
                                content: 
                                  type: string

                    # 《内容》 列表定义 
                    contents: 
                      type: array
                      items:
                        type: object 
                        required:
                          - name
                          - kind
                        properties:
                          <<: *ELEMENT_PROPERTIES
                          kind: 
                            type: string
                            enum:
                             - list   # 列表
                             - grid   # 表格
                             - static # 静态
                             - iframe # 内嵌
                             - form   # 表单
                             - chart  # 图表
                          # 通过《数据》机读代码引用
                          data: 
                            type: string
                          operation: *OPERATION
                          # 引用自其他Yaml定义，比如 "QForm", "QChart"
                          reference:
                            type: object
                            properties:
                              kind:
                                type: string
                                enum:
                                  - QForm
                                  - QChart
                              name:
                                type: string
                              # 该引用Yaml的最后修改时间戳（版本号）
                              timestamp: 
                                type: integer
                          # 内置类型Content（grid）的属性定义
                          # 表格1：查询条件
                          conditions:
                            type: array
                            items:
                              type: object
                              properties:
                                text:
                                  type: string
                                filter: *FILTER 
                                input:  &INPUT
                                  type: object
                                  properties:
                                    <<: *CONTROL_PROPERTIES
                                    # 控件类型，edit|check|select|suggester|...
                                    kind:
                                      type: string
                                    validation:
                                      type: string 
                          # 表格2：表格列
                          columns:
                            type: array
                            items:
                              type: object
                              properties:
                                <<: *CONTROL_PROPERTIES
                                field: *FIELD
                                input: *INPUT
                                sort:
                                  type: object
                                  properties:
                                    enabled: 
                                      type: boolean
                                    order:
                                      type: string

                          # 表格3：表格动作
                          actions:
                            type: array
                            items: *ACTION
                          # 表格4：表格行动作
                          # 列表1：列表项动作（例外）
                          itemActions:
                            type: array
                            items: *ACTION
                          # 静态1: 静态内容格式
                          format:
                            type: string
                            enum:
                              - HTML
                              - Markdown
                          # 静态2：静态内容
                          body:
                            type: string
                          # 列表2：列表项动作 
                          action: *ACTION 
                          # 列表3：列表筛选条件
                          filter: *FILTER
                          # 表单1：权限列表
                          permissions:
                            type: array
                            items:
                              type: object
                              properties:
                                # 字段名，引用自 data[].fields[].name
                                field:
                                  type: string
                                # 权限字：
                                # r（读）w（写）i（增）d（删）e（修改）R（Sibling读）
                                access:
                                  type: string
                                  pattern: '^[rwideR*]*$'

                    # 《弹框》 列表定义 
                    popups: 
                      type: array
                      items:
                        type: object 

                    # 《角色》 列表定义
                    # 参考：https://github.com/ketanyun/docs/wiki/Role
                    roles: 
                      type: array
                      items:
                        type: object 
                        properties:
                          <<: *ELEMENT_PROPERTIES
                          # 权限主体（主语）
                          subjects:
                            type: array
                            items:
                              type: object
                              properties:
                                kind:
                                  type: string
                                  enum:
                                    - ALLOW
                                    - DENY
                                user: *USER
                                post: *POST
                                dept: *DEPT 
                          # 允许分级授权。r:默认，当前主体拥；w:可授予他人但不能再分级；x:可将x授予其他人
                          grant: 
                            type: string
                          # 角色保护级别（系统、用户自定义）
                          ring:
                            type: string
                            enum:
                              - system  # 系统角色，不允许用户修改其权限部分
                              - user    # 用户自定义角色
                          rules:
                            type: array
                            items:
                              type: object
                              required:
                                - objects
                              properties:
                                # 权限对象（宾语）
                                objects: 
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - kind
                                      - name
                                    properties:
                                      # 权限宾语类型
                                      kind: 
                                        type: string
                                        enum: 
                                          - type # 网关 GraphQL 的类型
                                          - data # 数据，引用 spec.canvas.data[].name
                                          - menu # 菜单，引用 spec.canvas.menu.items[].name
                                      # 宾语对象引用名，对于 kind为type时，支持指定服务前缀，如 "iam/User"
                                      name: 
                                        type: string
                                      # 显示名，仅用于非内部引用类型 
                                      text:
                                        type: string
                                      # 仅支持menu类型：权限字，*/[r]/[w]/[rw]，用于自动为ACL选择operation
                                      access:
                                        type: string 
                                      # 仅支持menu类型：是否按部门限定菜单可见性
                                      limitDept:
                                        type: boolean 
                                      # 仅支持menu类型：是否限定菜单对应的数据(accesses)的部门，用于控制是否为ACL追加Filter
                                      limitDeptAccess:
                                        type: boolean 

                                # 权限操作（谓语）
                                verbs: 
                                  type: array
                                  items: *OPERATION

                    # 《入口》列表定义 
                    entries: 
                      type: array
                      items:
                        type: object
                        required:
                          - name
                          - uri
                          - text
                        properties:
                          # 入口标识，用于部分API
                          name: 
                            type: string            
                          # 入口文字，用于前端显示
                          text: 
                            type: string     
                          # 入口链接，相对路径，不包含域名部分
                          uri: 
                            type: string                   
                          # 图标链接，相对路径，不包含域名部分
                          icon: 
                            type: string      
                          # 入口描述
                          description:
                            type: string      
                          # 入口标签
                          tags:
                            type: string      

                          # 支持屏，空集视为不限
                          screens: 
                            type: array
                            items:
                              type: string
                              enum:
                                - desktop    # 桌面端
                                - mobile     # 移动端（所有非桌面端）
                                # - ios        # 苹果原生App
                                # - android    # 安卓原生App
                                - wechat     # 微信（包括企业微信）
                                # - wechat_pc  # 微信PC端
                          
                          # 支持用户列表，空集视为不限，语法参考：[UserFilter](https://github.com/infoplus/docs/wiki/UserFilter)
                          userFilters: 
                            type: array
                            items:
                              type: string 

                          # 激活此应用入口的依赖项，比如依赖于infoplus流程或其他子QCanvas
                          dependencies:
                            type: array
                            items:
                              type: object
                              properties:
                                # 应用模版ID，可用于[WorkspaceAPI](https://github.com/ketanyun/docs/wiki/WorkspaceAPI)的activateApp方法的template参数
                                name: 
                                  type: string
                                # 提供WorkspaceAPI的服务名，参考[QService](https://github.com/ketanyun/docs/wiki/QService)
                                # 目前支持：infoplus、answer、maker
                                service: 
                                  type: string

